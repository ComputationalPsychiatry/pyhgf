{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5af600c9-eb11-48fb-ba83-0a2c2d6e824e",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "source": [
    "(categorical_hgf)=\n",
    "# The categorical Hierarchical Gaussian Filter\n",
    "\n",
    "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ilabcode/pyhgf/blob/master/docs/source/notebooks/1.3-CAtegorical_HGF.ipynb)\n",
    "\n",
    "```{warning}\n",
    "The categorical state node and the categorical state-transition nodes are still work in progress. The examples provided here are given for illustration. Things may change or not work until the official publication.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e9143ab5-131e-4a1c-9130-326c3538f888",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": [
     "hide-cell"
    ]
   },
   "outputs": [],
   "source": [
    "import sys\n",
    "from IPython.utils import io\n",
    "if 'google.colab' in sys.modules:\n",
    "\n",
    "  with io.capture_output() as captured:\n",
    "      ! pip install pyhgf watermark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d2c1e257-91ab-455d-a3ea-0ac0136797ed",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": [
     "hide-cell"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "An NVIDIA GPU may be present on this machine, but a CUDA-enabled jaxlib is not installed. Falling back to cpu.\n"
     ]
    }
   ],
   "source": [
    "import jax.numpy as jnp\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pytensor.tensor as pt\n",
    "import seaborn as sns\n",
    "from jax import jit, vjp\n",
    "from jax.tree_util import Partial\n",
    "from pyhgf.model import Network\n",
    "from pyhgf.plots import plot_nodes\n",
    "from pytensor.graph import Apply, Op"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbb1fadf-bc75-4695-b62c-0db2d3d8689b",
   "metadata": {},
   "source": [
    "The binary state nodes that we introduced in the previous section are useful to encode information about stochastic boolean variables that are common in reinforcement learning and decision-making design. However, situations may occur where discrete variables can have more than two categories and therefore need to be encoded by a categorical distribution. Here, we introduce two probabilistic nodes tailored to handle this kind of variable: the **categorical state node** and the **categorical state-transition node**.\n",
    "\n",
    "Both nodes are a generalisation of the binary HGFs (in the sense that they internally represent a collection of binary state nodes). We refer to **categorical HGF** in a broad sense for HGFs that can handle categorical distributions, but as we will illustrate below, there are many ways to do that and a more precise terminology is to refer to the kind of node used internally (the **categorical state node** and the **categorical state-transition node**)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "66a3991f-2170-43d6-8bb9-2541e80bf3d2",
   "metadata": {},
   "source": [
    "## Simulating a dataset\n",
    "We start by simulating a dataset on which we can apply the categorical HGFs. The dataset consists of a categorical input where the number of categories $K=10$. The underlying contingencies are generated by three Dirichlet distributions on which we sample 150 observations sequentially."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "dba7fabb-e5d9-48d6-8c8e-2fecc7df28be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# generate some categorical inputs data using three underlying distributions\n",
    "p1 = np.random.dirichlet(alpha=[1, 2, 3, 5, 9, 13, 17, 25, 30, 35])\n",
    "p2 = np.random.dirichlet(alpha=[1, 2, 3, 5, 30, 30, 5, 3, 2, 1])\n",
    "p3 = np.random.dirichlet(alpha=[35, 30, 25, 17, 13, 9, 5, 3, 2, 1])\n",
    "input_data = np.array(\n",
    "    [np.random.multinomial(n=1, pvals=p) for p in [p1, p2, p3] for _ in range(250)]\n",
    ").T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf4027a-be50-42cf-88d7-e0847c1f9930",
   "metadata": {},
   "source": [
    "The Dirichlet distributions are parametrized in such a way that it goes from a \"skewed\" distribution to a centred distribution to another \"skewed\" distribution. The resulting sequence of categorical observations then looks like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f37e6acb-ae8e-4aea-8914-5333cbe46921",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 3))\n",
    "plt.imshow(input_data, interpolation=\"none\", aspect=\"auto\", cmap=\"binary\")\n",
    "plt.ylabel(\"Categories\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Categorical observations\");"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15a23310-1d29-4a84-9cd2-a30c0e0b64e3",
   "metadata": {},
   "source": [
    "```{note}\n",
    "The lower part of the figure represent the surprise associated with the categorical node. Here, we use the [Kullback-Leibler divergence between two Dirichlet distributions](https://statproofbook.github.io/P/dir-kl.html) as a measure of Bayesian surprise. The Kullback-Leibler divergence of the Dirichlet distribution $P$ from the Dirichlet distribution $Q$ is given by the following equation:\n",
    "\n",
    "$$\n",
    "KL[P||Q] = \\ln{\\frac{\\Gamma(\\sum_{i=1}^k\\alpha_{1i})}{\\Gamma(\\sum_{i=1}^k\\alpha_{2i})}} + \\sum_{i=1}^k \\ln{\\frac{\\Gamma(\\alpha_{2i})}{\\Gamma(\\alpha_{1i})}} + \\sum_{i=1}^k(\\alpha_{1i} - \\alpha_{2i}) \\left[ \\psi(\\alpha_{1i}) - \\psi(\\sum_{i=1}^k \\alpha_{1i}) \\right]\n",
    "$$\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6511fd24-48a0-4913-9cb2-2ed3dba57f4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adding a blank input time series for the categorical state node\n",
    "# this is because the categorical state node does not receive anything\n",
    "# only binary nodes are the actual inputs of the network\n",
    "input_data = np.vstack([[0.0] * input_data.shape[1], input_data])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc71d527-2f88-4c4f-b81e-5ededd64d678",
   "metadata": {},
   "source": [
    "## The categorical state node"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19c97cda-64b8-4e1e-b90a-7bf538c033e1",
   "metadata": {},
   "source": [
    "### Creating the probabilistic network"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1ae2e67a-0b7b-462b-89b7-0c1ec1fb4262",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "categorical_hgf = Network().add_nodes(\n",
    "    kind=\"categorical-input\", n_categories=10, binary_parameters={\"tonic_volatility_2\": -2.0},\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2806c2d9-e6a9-4113-829f-1f0616a31b4b",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 9.0.0 (20231125.0833)\n",
       " -->\n",
       "<!-- Title: hgf&#45;nodes Pages: 1 -->\n",
       "<svg width=\"710pt\" height=\"355pt\"\n",
       " viewBox=\"0.00 0.00 710.00 355.40\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 351.4)\">\n",
       "<title>hgf&#45;nodes</title>\n",
       "<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-351.4 706,-351.4 706,4 -4,4\"/>\n",
       "<!-- x_0 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>x_0</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"351,-36 303.13,-18 351,0 398.87,-18 351,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"351\" y=\"-13.32\" font-family=\"Times,serif\" font-size=\"14.00\">Ca&#45;0</text>\n",
       "</g>\n",
       "<!-- x_1 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>x_1</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"54,-108 0,-108 0,-72 54,-72 54,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"27\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;1</text>\n",
       "</g>\n",
       "<!-- x_1&#45;&gt;x_0 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>x_1&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M54.22,-75.25C57.14,-74.05 60.11,-72.93 63,-72 145.17,-45.54 245.04,-30.86 302.98,-23.98\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"303.3,-27.46 312.84,-22.84 302.5,-20.51 303.3,-27.46\"/>\n",
       "</g>\n",
       "<!-- x_2 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>x_2</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"126,-108 72,-108 72,-72 126,-72 126,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"99\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;2</text>\n",
       "</g>\n",
       "<!-- x_2&#45;&gt;x_0 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>x_2&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M126.28,-75.43C129.19,-74.19 132.13,-73.02 135,-72 193.79,-51.14 264.41,-35.5 308.51,-26.8\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"309.03,-30.27 318.18,-24.92 307.7,-23.39 309.03,-30.27\"/>\n",
       "</g>\n",
       "<!-- x_3 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>x_3</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"198,-108 144,-108 144,-72 198,-72 198,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"171\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;3</text>\n",
       "</g>\n",
       "<!-- x_3&#45;&gt;x_0 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>x_3&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M198.4,-75.75C201.29,-74.45 204.2,-73.18 207,-72 243.71,-56.61 286.62,-41.13 315.99,-30.91\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"316.8,-34.33 325.11,-27.76 314.52,-27.72 316.8,-34.33\"/>\n",
       "</g>\n",
       "<!-- x_4 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>x_4</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"270,-108 216,-108 216,-72 270,-72 270,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"243\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;4</text>\n",
       "</g>\n",
       "<!-- x_4&#45;&gt;x_0 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>x_4&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M269.97,-71.52C286.63,-60.72 307.92,-46.92 324.49,-36.18\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"326.36,-39.14 332.85,-30.76 322.55,-33.27 326.36,-39.14\"/>\n",
       "</g>\n",
       "<!-- x_5 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>x_5</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"342,-108 288,-108 288,-72 342,-72 342,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"315\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;5</text>\n",
       "</g>\n",
       "<!-- x_5&#45;&gt;x_0 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>x_5&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M323.9,-71.7C328.27,-63.2 333.61,-52.81 338.39,-43.52\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"341.5,-45.12 342.96,-34.62 335.28,-41.92 341.5,-45.12\"/>\n",
       "</g>\n",
       "<!-- x_6 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>x_6</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"414,-108 360,-108 360,-72 414,-72 414,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"387\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;6</text>\n",
       "</g>\n",
       "<!-- x_6&#45;&gt;x_0 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>x_6&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M378.1,-71.7C373.73,-63.2 368.39,-52.81 363.61,-43.52\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"366.72,-41.92 359.04,-34.62 360.5,-45.12 366.72,-41.92\"/>\n",
       "</g>\n",
       "<!-- x_7 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>x_7</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"486,-108 432,-108 432,-72 486,-72 486,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"459\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;7</text>\n",
       "</g>\n",
       "<!-- x_7&#45;&gt;x_0 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>x_7&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M432.03,-71.52C415.37,-60.72 394.08,-46.92 377.51,-36.18\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"379.45,-33.27 369.15,-30.76 375.64,-39.14 379.45,-33.27\"/>\n",
       "</g>\n",
       "<!-- x_8 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>x_8</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"558,-108 504,-108 504,-72 558,-72 558,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"531\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;8</text>\n",
       "</g>\n",
       "<!-- x_8&#45;&gt;x_0 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>x_8&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M503.6,-75.75C500.71,-74.45 497.8,-73.18 495,-72 458.29,-56.61 415.38,-41.13 386.01,-30.91\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"387.48,-27.72 376.89,-27.76 385.2,-34.33 387.48,-27.72\"/>\n",
       "</g>\n",
       "<!-- x_9 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>x_9</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"630,-108 576,-108 576,-72 630,-72 630,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"603\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;9</text>\n",
       "</g>\n",
       "<!-- x_9&#45;&gt;x_0 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>x_9&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M575.72,-75.43C572.81,-74.19 569.87,-73.02 567,-72 508.21,-51.14 437.59,-35.5 393.49,-26.8\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"394.3,-23.39 383.82,-24.92 392.97,-30.27 394.3,-23.39\"/>\n",
       "</g>\n",
       "<!-- x_10 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>x_10</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"702,-108 648,-108 648,-72 702,-72 702,-108\"/>\n",
       "<text text-anchor=\"middle\" x=\"675\" y=\"-85.33\" font-family=\"Times,serif\" font-size=\"14.00\">Bi&#45;10</text>\n",
       "</g>\n",
       "<!-- x_10&#45;&gt;x_0 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>x_10&#45;&gt;x_0</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M647.78,-75.25C644.86,-74.05 641.89,-72.93 639,-72 556.83,-45.54 456.96,-30.86 399.02,-23.98\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"399.5,-20.51 389.16,-22.84 398.7,-27.46 399.5,-20.51\"/>\n",
       "</g>\n",
       "<!-- x_11 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>x_11</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"53,-180 17,-180 17,-144 53,-144 53,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"35\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">11</text>\n",
       "</g>\n",
       "<!-- x_11&#45;&gt;x_1 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>x_11&#45;&gt;x_1</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M33.02,-143.7C32.19,-136.41 31.2,-127.73 30.26,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"33.74,-119.15 29.13,-109.61 26.78,-119.94 33.74,-119.15\"/>\n",
       "</g>\n",
       "<!-- x_12 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>x_12</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"120,-180 84,-180 84,-144 120,-144 120,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"102\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">12</text>\n",
       "</g>\n",
       "<!-- x_12&#45;&gt;x_2 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>x_12&#45;&gt;x_2</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M101.26,-143.7C100.95,-136.41 100.57,-127.73 100.22,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"103.72,-119.46 99.8,-109.62 96.73,-119.76 103.72,-119.46\"/>\n",
       "</g>\n",
       "<!-- x_13 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>x_13</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"192,-180 156,-180 156,-144 192,-144 192,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"174\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">13</text>\n",
       "</g>\n",
       "<!-- x_13&#45;&gt;x_3 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>x_13&#45;&gt;x_3</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M173.26,-143.7C172.95,-136.41 172.57,-127.73 172.22,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"175.72,-119.46 171.8,-109.62 168.73,-119.76 175.72,-119.46\"/>\n",
       "</g>\n",
       "<!-- x_14 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>x_14</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"263,-180 227,-180 227,-144 263,-144 263,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"245\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">14</text>\n",
       "</g>\n",
       "<!-- x_14&#45;&gt;x_4 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>x_14&#45;&gt;x_4</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M244.51,-143.7C244.3,-136.41 244.05,-127.73 243.82,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"247.32,-119.51 243.53,-109.62 240.32,-119.71 247.32,-119.51\"/>\n",
       "</g>\n",
       "<!-- x_15 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>x_15</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"334,-180 298,-180 298,-144 334,-144 334,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"316\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">15</text>\n",
       "</g>\n",
       "<!-- x_15&#45;&gt;x_5 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>x_15&#45;&gt;x_5</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M315.75,-143.7C315.65,-136.41 315.52,-127.73 315.41,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"318.91,-119.57 315.27,-109.62 311.91,-119.67 318.91,-119.57\"/>\n",
       "</g>\n",
       "<!-- x_16 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>x_16</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"404,-180 368,-180 368,-144 404,-144 404,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"386\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">16</text>\n",
       "</g>\n",
       "<!-- x_16&#45;&gt;x_6 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>x_16&#45;&gt;x_6</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M386.25,-143.7C386.35,-136.41 386.48,-127.73 386.59,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"390.09,-119.67 386.73,-109.62 383.09,-119.57 390.09,-119.67\"/>\n",
       "</g>\n",
       "<!-- x_17 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>x_17</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"475,-180 439,-180 439,-144 475,-144 475,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"457\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">17</text>\n",
       "</g>\n",
       "<!-- x_17&#45;&gt;x_7 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>x_17&#45;&gt;x_7</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M457.49,-143.7C457.7,-136.41 457.95,-127.73 458.18,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"461.68,-119.71 458.47,-109.62 454.68,-119.51 461.68,-119.71\"/>\n",
       "</g>\n",
       "<!-- x_18 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>x_18</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"547,-180 511,-180 511,-144 547,-144 547,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"529\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">18</text>\n",
       "</g>\n",
       "<!-- x_18&#45;&gt;x_8 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>x_18&#45;&gt;x_8</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M529.49,-143.7C529.7,-136.41 529.95,-127.73 530.18,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"533.68,-119.71 530.47,-109.62 526.68,-119.51 533.68,-119.71\"/>\n",
       "</g>\n",
       "<!-- x_19 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>x_19</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"619,-180 583,-180 583,-144 619,-144 619,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"601\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">19</text>\n",
       "</g>\n",
       "<!-- x_19&#45;&gt;x_9 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>x_19&#45;&gt;x_9</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M601.49,-143.7C601.7,-136.41 601.95,-127.73 602.18,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"605.68,-119.71 602.47,-109.62 598.68,-119.51 605.68,-119.71\"/>\n",
       "</g>\n",
       "<!-- x_20 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>x_20</title>\n",
       "<polygon fill=\"none\" stroke=\"black\" points=\"691,-180 655,-180 655,-144 691,-144 691,-180\"/>\n",
       "<text text-anchor=\"middle\" x=\"673\" y=\"-157.32\" font-family=\"Times,serif\" font-size=\"14.00\">20</text>\n",
       "</g>\n",
       "<!-- x_20&#45;&gt;x_10 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>x_20&#45;&gt;x_10</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M673.49,-143.7C673.7,-136.41 673.95,-127.73 674.18,-119.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"677.68,-119.71 674.47,-109.62 670.68,-119.51 677.68,-119.71\"/>\n",
       "</g>\n",
       "<!-- x_21 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>x_21</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"38\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"38\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">21</text>\n",
       "</g>\n",
       "<!-- x_21&#45;&gt;x_11 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>x_21&#45;&gt;x_11</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M37.08,-215.68C36.79,-208.16 36.45,-199.72 36.14,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"39.64,-191.86 35.75,-182 32.65,-192.13 39.64,-191.86\"/>\n",
       "</g>\n",
       "<!-- x_22 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>x_22</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"105\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"105\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">22</text>\n",
       "</g>\n",
       "<!-- x_22&#45;&gt;x_12 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>x_22&#45;&gt;x_12</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M104.08,-215.68C103.79,-208.16 103.45,-199.72 103.14,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"106.64,-191.86 102.75,-182 99.65,-192.13 106.64,-191.86\"/>\n",
       "</g>\n",
       "<!-- x_23 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>x_23</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"177\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"177\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">23</text>\n",
       "</g>\n",
       "<!-- x_23&#45;&gt;x_13 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>x_23&#45;&gt;x_13</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M176.08,-215.68C175.79,-208.16 175.45,-199.72 175.14,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"178.64,-191.86 174.75,-182 171.65,-192.13 178.64,-191.86\"/>\n",
       "</g>\n",
       "<!-- x_24 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>x_24</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"248\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"248\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">24</text>\n",
       "</g>\n",
       "<!-- x_24&#45;&gt;x_14 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>x_24&#45;&gt;x_14</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M247.08,-215.68C246.79,-208.16 246.45,-199.72 246.14,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"249.64,-191.86 245.75,-182 242.65,-192.13 249.64,-191.86\"/>\n",
       "</g>\n",
       "<!-- x_25 -->\n",
       "<g id=\"node26\" class=\"node\">\n",
       "<title>x_25</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"317\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"317\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">25</text>\n",
       "</g>\n",
       "<!-- x_25&#45;&gt;x_15 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>x_25&#45;&gt;x_15</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M316.69,-215.68C316.6,-208.16 316.48,-199.72 316.38,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"319.88,-191.96 316.25,-182 312.88,-192.05 319.88,-191.96\"/>\n",
       "</g>\n",
       "<!-- x_26 -->\n",
       "<g id=\"node27\" class=\"node\">\n",
       "<title>x_26</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"386\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"386\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">26</text>\n",
       "</g>\n",
       "<!-- x_26&#45;&gt;x_16 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>x_26&#45;&gt;x_16</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M386,-215.68C386,-208.16 386,-199.72 386,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"389.5,-192 386,-182 382.5,-192 389.5,-192\"/>\n",
       "</g>\n",
       "<!-- x_27 -->\n",
       "<g id=\"node28\" class=\"node\">\n",
       "<title>x_27</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"456\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"456\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">27</text>\n",
       "</g>\n",
       "<!-- x_27&#45;&gt;x_17 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>x_27&#45;&gt;x_17</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M456.31,-215.68C456.4,-208.16 456.52,-199.72 456.62,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"460.12,-192.05 456.75,-182 453.12,-191.96 460.12,-192.05\"/>\n",
       "</g>\n",
       "<!-- x_28 -->\n",
       "<g id=\"node29\" class=\"node\">\n",
       "<title>x_28</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"527\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"527\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">28</text>\n",
       "</g>\n",
       "<!-- x_28&#45;&gt;x_18 -->\n",
       "<g id=\"edge28\" class=\"edge\">\n",
       "<title>x_28&#45;&gt;x_18</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M527.61,-215.68C527.81,-208.16 528.03,-199.72 528.24,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"531.73,-192.09 528.5,-182 524.74,-191.91 531.73,-192.09\"/>\n",
       "</g>\n",
       "<!-- x_29 -->\n",
       "<g id=\"node30\" class=\"node\">\n",
       "<title>x_29</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"599\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"599\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">29</text>\n",
       "</g>\n",
       "<!-- x_29&#45;&gt;x_19 -->\n",
       "<g id=\"edge29\" class=\"edge\">\n",
       "<title>x_29&#45;&gt;x_19</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M599.61,-215.68C599.81,-208.16 600.03,-199.72 600.24,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"603.73,-192.09 600.5,-182 596.74,-191.91 603.73,-192.09\"/>\n",
       "</g>\n",
       "<!-- x_30 -->\n",
       "<g id=\"node31\" class=\"node\">\n",
       "<title>x_30</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"671\" cy=\"-239.85\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"671\" y=\"-235.18\" font-family=\"Times,serif\" font-size=\"14.00\">30</text>\n",
       "</g>\n",
       "<!-- x_30&#45;&gt;x_20 -->\n",
       "<g id=\"edge30\" class=\"edge\">\n",
       "<title>x_30&#45;&gt;x_20</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M671.61,-215.68C671.81,-208.16 672.03,-199.72 672.24,-191.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"675.73,-192.09 672.5,-182 668.74,-191.91 675.73,-192.09\"/>\n",
       "</g>\n",
       "<!-- x_31 -->\n",
       "<g id=\"node32\" class=\"node\">\n",
       "<title>x_31</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"350\" cy=\"-323.55\" rx=\"23.85\" ry=\"23.85\"/>\n",
       "<text text-anchor=\"middle\" x=\"350\" y=\"-318.88\" font-family=\"Times,serif\" font-size=\"14.00\">31</text>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_21 -->\n",
       "<g id=\"edge31\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_21</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M326.02,-320.58C276.7,-315.86 161.05,-301.37 72,-263.7 69.38,-262.59 66.75,-261.27 64.17,-259.83\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"60.52\" cy=\"-257.6\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_22 -->\n",
       "<g id=\"edge32\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_22</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M326.48,-317.86C287.53,-309.64 207.61,-290.9 144,-263.7 140.14,-262.05 136.2,-260.1 132.37,-258.03\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"128.65\" cy=\"-255.93\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_23 -->\n",
       "<g id=\"edge33\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_23</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M328.09,-314.02C301.04,-303.27 253.86,-283.74 215,-263.7 211.52,-261.91 207.92,-259.92 204.39,-257.89\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"200.72\" cy=\"-255.73\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_24 -->\n",
       "<g id=\"edge34\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_24</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M331.76,-307.94C315.48,-294.9 291.45,-275.66 273.31,-261.12\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"269.93\" cy=\"-258.42\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_25 -->\n",
       "<g id=\"edge35\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_25</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M341.33,-301.09C337.57,-291.78 333.1,-280.72 329.03,-270.64\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"327.41\" cy=\"-266.63\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_26 -->\n",
       "<g id=\"edge36\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_26</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M359.27,-301.51C363.48,-291.96 368.53,-280.5 373.1,-270.13\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"374.82\" cy=\"-266.22\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_27 -->\n",
       "<g id=\"edge37\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_27</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M368.46,-308.32C385.61,-295.1 411.3,-275.3 430.42,-260.57\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"433.83\" cy=\"-257.94\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_28 -->\n",
       "<g id=\"edge38\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_28</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M372.1,-314.31C399.89,-303.69 448.83,-284.15 489,-263.7 492.49,-261.92 496.09,-259.95 499.63,-257.93\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"503.3\" cy=\"-255.77\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_29 -->\n",
       "<g id=\"edge39\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_29</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M373.66,-318C413.26,-309.92 495,-291.3 560,-263.7 563.86,-262.06 567.81,-260.11 571.64,-258.05\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"575.36\" cy=\"-255.95\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "<!-- x_31&#45;&gt;x_30 -->\n",
       "<g id=\"edge40\" class=\"edge\">\n",
       "<title>x_31&#45;&gt;x_30</title>\n",
       "<path fill=\"none\" stroke=\"gray\" stroke-dasharray=\"5,2\" d=\"M373.76,-320.22C423.23,-314.8 540.3,-299.04 632,-263.7 635.91,-262.19 639.89,-260.32 643.74,-258.3\"/>\n",
       "<ellipse fill=\"gray\" stroke=\"gray\" cx=\"647.46\" cy=\"-256.21\" rx=\"4\" ry=\"4\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.sources.Source at 0x7f7b33c3b5c0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical_hgf.plot_network()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea060dd5-e679-4793-bfe2-78f3116f1b38",
   "metadata": {},
   "source": [
    "### Fitting the model forwards"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6e27b3d9-1b10-4cf9-9074-725a9638345d",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "categorical_hgf.input_data(input_data=input_data.T);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3e76f37e-36b0-49d4-8169-86f08b309e0d",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x900 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(nrows=5, figsize=(12, 9), sharex=True)\n",
    "plot_nodes(categorical_hgf, node_idxs=31, axs=axs[0])\n",
    "axs[1].imshow(\n",
    "    categorical_hgf.node_trajectories[0][\"mean\"].T, interpolation=\"none\", aspect=\"auto\"\n",
    ")\n",
    "axs[1].set_title(\"Mean of the implied Dirichlet distribution\", loc=\"left\")\n",
    "axs[1].set_ylabel(\"Categories\")\n",
    "\n",
    "# observations\n",
    "axs[2].imshow(input_data, interpolation=\"none\", aspect=\"auto\", cmap=\"binary\")\n",
    "axs[2].set_title(\"Observations\", loc=\"left\")\n",
    "axs[2].set_ylabel(\"Categories\")\n",
    "\n",
    "# surprise\n",
    "axs[3].plot(\n",
    "    np.arange(2, len(categorical_hgf.node_trajectories[0][\"kl_divergence\"])),\n",
    "    categorical_hgf.node_trajectories[0][\"kl_divergence\"][2:],\n",
    "    color=\"#2a2a2a\",\n",
    "    linewidth=0.5,\n",
    "    zorder=-1,\n",
    "    label=\"Surprise\",\n",
    ")\n",
    "axs[3].fill_between(\n",
    "    x=np.arange(2, len(categorical_hgf.node_trajectories[0][\"kl_divergence\"])),\n",
    "    y1=categorical_hgf.node_trajectories[0][\"kl_divergence\"][2:],\n",
    "    y2=categorical_hgf.node_trajectories[0][\"kl_divergence\"][2:].min(),\n",
    "    color=\"#7f7f7f\",\n",
    "    alpha=0.1,\n",
    "    zorder=-1,\n",
    ")\n",
    "axs[3].set_title(\"Kullback-Leibler divergences\", loc=\"left\")\n",
    "axs[2].set_ylabel(\"Surprises\")\n",
    "\n",
    "axs[4].plot(\n",
    "    np.arange(len(categorical_hgf.node_trajectories[0][\"surprise\"])),\n",
    "    categorical_hgf.node_trajectories[0][\"surprise\"],\n",
    "    color=\"#2a2a2a\",\n",
    "    linewidth=0.5,\n",
    "    zorder=-1,\n",
    "    label=\"Surprise\",\n",
    ")\n",
    "axs[4].fill_between(\n",
    "    x=np.arange(len(categorical_hgf.node_trajectories[0][\"surprise\"])),\n",
    "    y1=categorical_hgf.node_trajectories[0][\"surprise\"],\n",
    "    y2=categorical_hgf.node_trajectories[0][\"surprise\"].min(),\n",
    "    color=\"#7f7f7f\",\n",
    "    alpha=0.1,\n",
    "    zorder=-1,\n",
    ")\n",
    "axs[4].set_title(\"Sum of binary surprises\", loc=\"left\")\n",
    "axs[2].set_ylabel(\"Surprises\")\n",
    "\n",
    "sns.despine()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d915da54-5396-467c-827b-583a77ff8391",
   "metadata": {},
   "source": [
    "### Inference using MCMC sampling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aea0e621-26f2-436e-b958-f0e9caa50992",
   "metadata": {},
   "source": [
    "In the binary and continuous HGF example, we have been using the {py:class}`pyhgf.distribution.HGFDistribution` class to create a PyMC-compatible distribution of the HGF. This was possible when using the most standard models as we can easily write a pre-defined distribution that fits exactly the network specification. However, when using more exotic network structures, as this is the case here with the categorical state nodes where the number of nodes in the network grows with the number of categories, we need a more flexible approach that can let us wrap a PyMC distribution for every kind of network we can have. \n",
    "\n",
    "This is what we are doing below (see [this blog post](https://www.pymc-labs.io/blog-posts/jax-functions-in-pymc-3-quick-examples/) and the [PyMC documentation](https://www.pymc.io/projects/examples/en/latest/case_studies/wrapping_jax_function.html) on how to do that). First, we start by creating a function that computes the surprise of the model, here using the Kullback-Leibler divergences of the implied Dirichlet distributions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "895b59fc-9e49-4848-bc07-59325e34b5d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def categorical_surprise(omega_2, hgf, input_data):\n",
    "\n",
    "    # replace with a new omega in the model\n",
    "    for idx in np.arange(21, 31):\n",
    "        hgf.attributes[idx][\"tonic_volatility\"] = omega_2\n",
    "\n",
    "    # run the model forward again\n",
    "    hgf.input_data(input_data=input_data.T)\n",
    "\n",
    "    # compute the surprises using KL divergences\n",
    "    surprise = hgf.node_trajectories[0][\"kl_divergence\"][2:].sum()\n",
    "\n",
    "    # return an infinite surprise if the model could not fit at any point\n",
    "    surprise = jnp.where(\n",
    "        jnp.any(jnp.isnan(hgf.node_trajectories[0][\"xi\"])), jnp.inf, surprise\n",
    "    )\n",
    "\n",
    "    return surprise\n",
    "\n",
    "\n",
    "surprise_fn = Partial(categorical_surprise, hgf=categorical_hgf, input_data=input_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5ebba47-0e0e-47ca-9c8f-91dc84422394",
   "metadata": {},
   "source": [
    "We create both jitted and the vector-jacobian product requiered for a custom Op in PyTensor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "05bcec35-1b57-4593-9285-b773f0f9e5c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "jitted_custom_op_jax = jit(surprise_fn)\n",
    "\n",
    "\n",
    "def vjp_custom_op_jax(x, gz):\n",
    "    _, vjp_fn = vjp(surprise_fn, x)\n",
    "    return vjp_fn(gz)[0]\n",
    "\n",
    "\n",
    "jitted_vjp_custom_op_jax = jit(vjp_custom_op_jax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "191f65ab-6b82-4de6-9a3a-940f5d6c7400",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": [
     "hide-cell"
    ]
   },
   "outputs": [],
   "source": [
    "# The CustomOp needs `make_node`, `perform` and `grad`.\n",
    "class CustomOp(Op):\n",
    "    def make_node(self, x):\n",
    "        # Create a PyTensor node specifying the number and type of inputs and outputs\n",
    "\n",
    "        # We convert the input into a PyTensor tensor variable\n",
    "        inputs = [pt.as_tensor_variable(x)]\n",
    "        # Output has the same type and shape as `x`\n",
    "        outputs = [inputs[0].type()]\n",
    "        return Apply(self, inputs, outputs)\n",
    "\n",
    "    def perform(self, node, inputs, outputs):\n",
    "        # Evaluate the Op result for a specific numerical input\n",
    "\n",
    "        # The inputs are always wrapped in a list\n",
    "        (x,) = inputs\n",
    "        result = jitted_custom_op_jax(x)\n",
    "        # The results should be assigned inplace to the nested list\n",
    "        # of outputs provided by PyTensor. If you have multiple\n",
    "        # outputs and results, you should assign each at outputs[i][0]\n",
    "        outputs[0][0] = np.asarray(result, dtype=\"float64\")\n",
    "\n",
    "    def grad(self, inputs, output_gradients):\n",
    "        # Create a PyTensor expression of the gradient\n",
    "        (x,) = inputs\n",
    "        (gz,) = output_gradients\n",
    "        # We reference the VJP Op created below, which encapsulates\n",
    "        # the gradient operation\n",
    "        return [vjp_custom_op(x, gz)]\n",
    "\n",
    "\n",
    "class VJPCustomOp(Op):\n",
    "    def make_node(self, x, gz):\n",
    "        # Make sure the two inputs are tensor variables\n",
    "        inputs = [pt.as_tensor_variable(x), pt.as_tensor_variable(gz)]\n",
    "        # Output has the shape type and shape as the first input\n",
    "        outputs = [inputs[0].type()]\n",
    "        return Apply(self, inputs, outputs)\n",
    "\n",
    "    def perform(self, node, inputs, outputs):\n",
    "        (x, gz) = inputs\n",
    "        result = jitted_vjp_custom_op_jax(x, gz)\n",
    "        outputs[0][0] = np.asarray(result, dtype=\"float64\")\n",
    "\n",
    "\n",
    "# Instantiate the Ops\n",
    "custom_op = CustomOp()\n",
    "vjp_custom_op = VJPCustomOp()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ccf51208-980b-4ccd-9b2a-cae1525da3f0",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# with pm.Model() as model:\n",
    "#    omega_2 = pm.Normal(\"omega_2\", -2.0, 2)\n",
    "#    pm.Potential(\"hgf\", custom_op(omega_2))\n",
    "#    categorical_idata = pm.sample(chains=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "bce093e9-1ab0-4ea1-99e6-a83b68331b9c",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# az.plot_trace(categorical_idata)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44abf936-9aba-487c-bbb0-96ed9af3de73",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "source": [
    "## The categorical state-transition node\n",
    "\n",
    "```{warning}\n",
    "This is work in progress.\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3c8e69f-b9f6-4c42-ac1e-f31bfb6b1bf3",
   "metadata": {},
   "source": [
    "# System configuration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "25f8522f-9d42-47fd-a6bc-87ffc0dfd866",
   "metadata": {
    "editable": true,
    "scrolled": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Last updated: Fri Aug 23 2024\n",
      "\n",
      "Python implementation: CPython\n",
      "Python version       : 3.12.3\n",
      "IPython version      : 8.23.0\n",
      "\n",
      "pyhgf : 0.1.4\n",
      "jax   : 0.4.31\n",
      "jaxlib: 0.4.31\n",
      "\n",
      "pytensor  : 2.25.2\n",
      "matplotlib: 3.8.4\n",
      "jax       : 0.4.31\n",
      "numpy     : 1.26.0\n",
      "sys       : 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]\n",
      "seaborn   : 0.13.2\n",
      "\n",
      "Watermark: 2.4.3\n",
      "\n"
     ]
    }
   ],
   "source": [
    "%load_ext watermark\n",
    "%watermark -n -u -v -iv -w -p pyhgf,jax,jaxlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5351f55-8c0a-4e45-b5d5-32853b4b3e2e",
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
